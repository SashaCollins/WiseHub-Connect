version: '3.7'
services:
  drone:
    image: drone/drone:1
    environment:
      DRONE_GITHUB_CLIENT_ID: b31b26d4109e2934876e
      DRONE_GITHUB_CLIENT_SECRET: 3a3675629294626dd68d885e13428210efc3d380
      DRONE_RPC_SECRET: 2e5e14f277c72fc21541f435f738fa2f
      DRONE_SERVER_HOST: 127.0.0.1
      DRONE_SERVER_PROTO: http
      DRONE_USER_CREATE: username:SashaCollins,admin:true
    ports:
      - "127.0.0.1:9080:80"
      - "127.0.0.1:9443:443"
    restart: always
    volumes:
    - "/var/lib/testing_tools:/dat"
    networks:
      - drone

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx:/etc/nginx/conf.d"
      - "./nginx/dhparams.pem:/etc/nginx/ssl/dhparams.pem"
      - "./certbot/conf:/etc/letsencrypt"
      - "./certbot/www:/var/www/certbot"
    networks:
      - drone
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - "./certbot/conf:/etc/letsencrypt"
      - "./certbot/www:/var/www/certbot"
    networks:
      - drone
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  runner:
    image: drone/drone-runner-docker:1
    depends_on:
      - drone
    environment:
      DRONE_RPC_PROTO: http
      DRONE_RPC_HOST: testing_tools
      DRONE_RPC_SECRET: 2e5e14f277c72fc21541f435f738fa2f
      DRONE_RUNNER_CAPACITY: 2
      DRONE_RUNNER_NAME: drone_runner
      DRONE_DEBUG: 'true'
      DRONE_TRACE: 'true'
      DRONE_RPC_DUMP_HTTP: 'true'
      DRONE_RPC_DUMP_HTTP_BODY: 'true'
      DRONE_UI_USERNAME: root
      DRONE_UI_PASSWORD: root
    privileged: yes
    ports:
    - "127.0.0.1:3000:3000"
    restart: always
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - drone

networks:
  drone: